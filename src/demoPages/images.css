.images-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 16px;
    background: var(--gray);
}

.image-column {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.rotate {
    animation: rotate 1.5s linear 0s infinite normal forwards;
}

.fade {
    animation: fade 1.5s ease 0s infinite;
}

.component-bubble .big-bubble {
    animation: scale 2s ease 0s infinite;
}
.component-bubble .left-bubble {
    animation: shake 1s ease 0s infinite;
}

.component-bubble .right-bubble {
    animation: colorFade 2.5s ease 0s infinite;
}

/*
The animation-timing-function property can have the following values:
    ease - Specifies an animation with a slow start, then fast, then end slowly (this is default)
    linear - Specifies an animation with the same speed from start to end
    ease-in - Specifies an animation with a slow start
    ease-out - Specifies an animation with a slow end
    ease-in-out - Specifies an animation with a slow start and end
    cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function

The animation-direction property can have the following values:
    normal - The animation is played as normal (forwards). This is default
    reverse - The animation is played in reverse direction (backwards)
    alternate - The animation is played forwards first, then backwards
    alternate-reverse - The animation is played backwards first, then forwards
*/

@keyframes rotate {
    0% {
        transform: rotate(0);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes fade {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@keyframes colorFade {
    0% {
        fill: var(--primary-bg-color);
    }
    50% {
        fill: var(--secondary-bg-color);
    }
    100% {
        fill: var(--primary-bg-color);
    }
}

@keyframes scale {
    0% {
        transform: scale(1);
        transform-origin: 50% 50%;
    }
    50% {
        transform: scale(0.5);
        transform-origin: 50% 50%;
    }
    100% {
        transform: scale(1);
        transform-origin: 50% 50%;
    }
}

@keyframes shake {
    0%,
    20%,
    40%,
    60%,
    80%,
    100% {
        transform: translateX(2px);
    }

    10%,
    30%,
    50%,
    70%,
    90% {
        transform: translateX(-2px);
    }
}
